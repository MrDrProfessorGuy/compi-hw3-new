Grammar

    0 $accept: Program $end

    1 Program: Funcs

    2 Funcs: ε
    3      | FuncDecl Funcs

    4 $@1: ε

    5 FuncDecl: RetType ID LPAREN Formals RPAREN $@1 LBRACE Statements RBRACE

    6 RetType: Type
    7        | VOID

    8 Formals: ε
    9        | FormalsList

   10 FormalsList: FormalDecl
   11            | FormalDecl COMMA FormalsList

   12 FormalDecl: Type ID

   13 Statements: Statement
   14           | Statements Statement

   15 Statement: LBRACE OpenScopeBlock Statements RBRACE CloseScope
   16          | Type ID SC
   17          | Type ID ASSIGN Exp SC
   18          | ID ASSIGN Exp SC
   19          | Call SC
   20          | RETURN SC
   21          | RETURN Exp SC
   22          | IF LPAREN OpenScopeBlock ExpBool RPAREN Statement CloseScope
   23          | IF LPAREN OpenScopeBlock ExpBool RPAREN Statement CloseScope ELSE OpenScopeBlock Statement CloseScope
   24          | WHILE LPAREN OpenScopeCont ExpBool RPAREN Statement CloseScope
   25          | BREAK SC
   26          | CONTINUE SC

   27 Call: ID LPAREN ExpList RPAREN
   28     | ID LPAREN RPAREN

   29 ExpList: Exp
   30        | Exp COMMA ExpList

   31 Type: INT
   32     | BYTE
   33     | BOOL

   34 Exp: LPAREN Exp RPAREN
   35    | Exp IF LPAREN Exp RPAREN ELSE Exp
   36    | Exp BINOP_ADD Exp
   37    | Exp BINOP_MUL Exp
   38    | ID
   39    | Call
   40    | NUM
   41    | NUM B
   42    | STRING
   43    | TRUE
   44    | FALSE
   45    | NOT Exp
   46    | Exp AND Exp
   47    | Exp OR Exp
   48    | Exp RELOP Exp
   49    | Exp EQUALITY Exp
   50    | LPAREN Type RPAREN Exp

   51 ExpBool: Exp

   52 OpenScopeBlock: ε

   53 OpenScopeCont: ε

   54 CloseScope: ε


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <NodeToken> (258) 5 12 16 17 18 27 28 38
    NUM <NodeToken> (259) 40 41
    STRING <NodeToken> (260) 42
    VOID <NodeToken> (261) 7
    INT <NodeToken> (262) 31
    BYTE <NodeToken> (263) 32
    B <NodeToken> (264) 41
    BOOL <NodeToken> (265) 33
    TRUE <NodeToken> (266) 43
    FALSE <NodeToken> (267) 44
    RETURN <NodeToken> (268) 20 21
    WHILE <NodeToken> (269) 24
    BREAK <NodeToken> (270) 25
    CONTINUE <NodeToken> (271) 26
    SC <NodeToken> (272) 16 17 18 19 20 21 25 26
    COMMA <NodeToken> (273) 11 30
    LPAREN <NodeToken> (274) 5 22 23 24 27 28 34 35 50
    RPAREN <NodeToken> (275) 5 22 23 24 27 28 34 35 50
    ASSIGN <NodeToken> (276) 17 18
    IF <NodeToken> (277) 22 23 35
    ELSE <NodeToken> (278) 23 35
    OR <NodeToken> (279) 47
    AND <NodeToken> (280) 46
    EQUALITY <NodeToken> (281) 49
    RELOP <NodeToken> (282) 48
    BINOP_ADD <NodeToken> (283) 36
    BINOP_MUL <NodeToken> (284) 37
    NOT <NodeToken> (285) 45
    LBRACE <NodeToken> (286) 5 15
    RBRACE <NodeToken> (287) 5 15


Nonterminals, with rules where they appear

    $accept (33)
        on left: 0
    Program <ProgramNode> (34)
        on left: 1
        on right: 0
    Funcs <NodeFuncsList> (35)
        on left: 2 3
        on right: 1 3
    FuncDecl <NodeFuncDecl> (36)
        on left: 5
        on right: 3
    $@1 (37)
        on left: 4
        on right: 5
    RetType <NodeRetType> (38)
        on left: 6 7
        on right: 5
    Formals <NodeFormals> (39)
        on left: 8 9
        on right: 5
    FormalsList <NodeFormalsList> (40)
        on left: 10 11
        on right: 9 11
    FormalDecl <NodeFormalDecl> (41)
        on left: 12
        on right: 10 11
    Statements <NodeStatement> (42)
        on left: 13 14
        on right: 5 14 15
    Statement <NodeStatement> (43)
        on left: 15 16 17 18 19 20 21 22 23 24 25 26
        on right: 13 14 22 23 24
    Call <NodeCall> (44)
        on left: 27 28
        on right: 19 39
    ExpList <NodeExpList> (45)
        on left: 29 30
        on right: 27 30
    Type <NodeExp> (46)
        on left: 31 32 33
        on right: 6 12 16 17 50
    Exp <NodeExp> (47)
        on left: 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50
        on right: 17 18 21 29 30 34 35 36 37 45 46 47 48 49 50 51
    ExpBool <NodeExp> (48)
        on left: 51
        on right: 22 23 24
    OpenScopeBlock (49)
        on left: 52
        on right: 15 22 23
    OpenScopeCont (50)
        on left: 53
        on right: 24
    CloseScope (51)
        on left: 54
        on right: 15 22 23 24


State 0

    0 $accept: • Program $end
    1 Program: • Funcs
    2 Funcs: ε •
    3      | • FuncDecl Funcs
    5 FuncDecl: • RetType ID LPAREN Formals RPAREN $@1 LBRACE Statements RBRACE
    6 RetType: • Type
    7        | • VOID
   31 Type: • INT
   32     | • BYTE
   33     | • BOOL

    VOID  shift, and go to state 1
    INT   shift, and go to state 2
    BYTE  shift, and go to state 3
    BOOL  shift, and go to state 4

    $default  reduce using rule 2 (Funcs)

    Program   go to state 5
    Funcs     go to state 6
    FuncDecl  go to state 7
    RetType   go to state 8
    Type      go to state 9


State 1

    7 RetType: VOID •

    $default  reduce using rule 7 (RetType)


State 2

   31 Type: INT •

    $default  reduce using rule 31 (Type)


State 3

   32 Type: BYTE •

    $default  reduce using rule 32 (Type)


State 4

   33 Type: BOOL •

    $default  reduce using rule 33 (Type)


State 5

    0 $accept: Program • $end

    $end  shift, and go to state 10


State 6

    1 Program: Funcs •

    $default  reduce using rule 1 (Program)


State 7

    2 Funcs: ε •
    3      | • FuncDecl Funcs
    3      | FuncDecl • Funcs
    5 FuncDecl: • RetType ID LPAREN Formals RPAREN $@1 LBRACE Statements RBRACE
    6 RetType: • Type
    7        | • VOID
   31 Type: • INT
   32     | • BYTE
   33     | • BOOL

    VOID  shift, and go to state 1
    INT   shift, and go to state 2
    BYTE  shift, and go to state 3
    BOOL  shift, and go to state 4

    $default  reduce using rule 2 (Funcs)

    Funcs     go to state 11
    FuncDecl  go to state 7
    RetType   go to state 8
    Type      go to state 9


State 8

    5 FuncDecl: RetType • ID LPAREN Formals RPAREN $@1 LBRACE Statements RBRACE

    ID  shift, and go to state 12


State 9

    6 RetType: Type •

    $default  reduce using rule 6 (RetType)


State 10

    0 $accept: Program $end •

    $default  accept


State 11

    3 Funcs: FuncDecl Funcs •

    $default  reduce using rule 3 (Funcs)


State 12

    5 FuncDecl: RetType ID • LPAREN Formals RPAREN $@1 LBRACE Statements RBRACE

    LPAREN  shift, and go to state 13


State 13

    5 FuncDecl: RetType ID LPAREN • Formals RPAREN $@1 LBRACE Statements RBRACE
    8 Formals: ε •
    9        | • FormalsList
   10 FormalsList: • FormalDecl
   11            | • FormalDecl COMMA FormalsList
   12 FormalDecl: • Type ID
   31 Type: • INT
   32     | • BYTE
   33     | • BOOL

    INT   shift, and go to state 2
    BYTE  shift, and go to state 3
    BOOL  shift, and go to state 4

    $default  reduce using rule 8 (Formals)

    Formals      go to state 14
    FormalsList  go to state 15
    FormalDecl   go to state 16
    Type         go to state 17


State 14

    5 FuncDecl: RetType ID LPAREN Formals • RPAREN $@1 LBRACE Statements RBRACE

    RPAREN  shift, and go to state 18


State 15

    9 Formals: FormalsList •

    $default  reduce using rule 9 (Formals)


State 16

   10 FormalsList: FormalDecl •
   11            | FormalDecl • COMMA FormalsList

    COMMA  shift, and go to state 19

    $default  reduce using rule 10 (FormalsList)


State 17

   12 FormalDecl: Type • ID

    ID  shift, and go to state 20


State 18

    4 $@1: ε •
    5 FuncDecl: RetType ID LPAREN Formals RPAREN • $@1 LBRACE Statements RBRACE

    $default  reduce using rule 4 ($@1)

    $@1  go to state 21


State 19

   10 FormalsList: • FormalDecl
   11            | • FormalDecl COMMA FormalsList
   11            | FormalDecl COMMA • FormalsList
   12 FormalDecl: • Type ID
   31 Type: • INT
   32     | • BYTE
   33     | • BOOL

    INT   shift, and go to state 2
    BYTE  shift, and go to state 3
    BOOL  shift, and go to state 4

    FormalsList  go to state 22
    FormalDecl   go to state 16
    Type         go to state 17


State 20

   12 FormalDecl: Type ID •

    $default  reduce using rule 12 (FormalDecl)


State 21

    5 FuncDecl: RetType ID LPAREN Formals RPAREN $@1 • LBRACE Statements RBRACE

    LBRACE  shift, and go to state 23


State 22

   11 FormalsList: FormalDecl COMMA FormalsList •

    $default  reduce using rule 11 (FormalsList)


State 23

    5 FuncDecl: RetType ID LPAREN Formals RPAREN $@1 LBRACE • Statements RBRACE
   13 Statements: • Statement
   14           | • Statements Statement
   15 Statement: • LBRACE OpenScopeBlock Statements RBRACE CloseScope
   16          | • Type ID SC
   17          | • Type ID ASSIGN Exp SC
   18          | • ID ASSIGN Exp SC
   19          | • Call SC
   20          | • RETURN SC
   21          | • RETURN Exp SC
   22          | • IF LPAREN OpenScopeBlock ExpBool RPAREN Statement CloseScope
   23          | • IF LPAREN OpenScopeBlock ExpBool RPAREN Statement CloseScope ELSE OpenScopeBlock Statement CloseScope
   24          | • WHILE LPAREN OpenScopeCont ExpBool RPAREN Statement CloseScope
   25          | • BREAK SC
   26          | • CONTINUE SC
   27 Call: • ID LPAREN ExpList RPAREN
   28     | • ID LPAREN RPAREN
   31 Type: • INT
   32     | • BYTE
   33     | • BOOL

    ID        shift, and go to state 24
    INT       shift, and go to state 2
    BYTE      shift, and go to state 3
    BOOL      shift, and go to state 4
    RETURN    shift, and go to state 25
    WHILE     shift, and go to state 26
    BREAK     shift, and go to state 27
    CONTINUE  shift, and go to state 28
    IF        shift, and go to state 29
    LBRACE    shift, and go to state 30

    Statements  go to state 31
    Statement   go to state 32
    Call        go to state 33
    Type        go to state 34


State 24

   18 Statement: ID • ASSIGN Exp SC
   27 Call: ID • LPAREN ExpList RPAREN
   28     | ID • LPAREN RPAREN

    LPAREN  shift, and go to state 35
    ASSIGN  shift, and go to state 36


State 25

   20 Statement: RETURN • SC
   21          | RETURN • Exp SC
   27 Call: • ID LPAREN ExpList RPAREN
   28     | • ID LPAREN RPAREN
   34 Exp: • LPAREN Exp RPAREN
   35    | • Exp IF LPAREN Exp RPAREN ELSE Exp
   36    | • Exp BINOP_ADD Exp
   37    | • Exp BINOP_MUL Exp
   38    | • ID
   39    | • Call
   40    | • NUM
   41    | • NUM B
   42    | • STRING
   43    | • TRUE
   44    | • FALSE
   45    | • NOT Exp
   46    | • Exp AND Exp
   47    | • Exp OR Exp
   48    | • Exp RELOP Exp
   49    | • Exp EQUALITY Exp
   50    | • LPAREN Type RPAREN Exp

    ID      shift, and go to state 37
    NUM     shift, and go to state 38
    STRING  shift, and go to state 39
    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    SC      shift, and go to state 42
    LPAREN  shift, and go to state 43
    NOT     shift, and go to state 44

    Call  go to state 45
    Exp   go to state 46


State 26

   24 Statement: WHILE • LPAREN OpenScopeCont ExpBool RPAREN Statement CloseScope

    LPAREN  shift, and go to state 47


State 27

   25 Statement: BREAK • SC

    SC  shift, and go to state 48


State 28

   26 Statement: CONTINUE • SC

    SC  shift, and go to state 49


State 29

   22 Statement: IF • LPAREN OpenScopeBlock ExpBool RPAREN Statement CloseScope
   23          | IF • LPAREN OpenScopeBlock ExpBool RPAREN Statement CloseScope ELSE OpenScopeBlock Statement CloseScope

    LPAREN  shift, and go to state 50


State 30

   15 Statement: LBRACE • OpenScopeBlock Statements RBRACE CloseScope
   52 OpenScopeBlock: ε •

    $default  reduce using rule 52 (OpenScopeBlock)

    OpenScopeBlock  go to state 51


State 31

    5 FuncDecl: RetType ID LPAREN Formals RPAREN $@1 LBRACE Statements • RBRACE
   14 Statements: Statements • Statement
   15 Statement: • LBRACE OpenScopeBlock Statements RBRACE CloseScope
   16          | • Type ID SC
   17          | • Type ID ASSIGN Exp SC
   18          | • ID ASSIGN Exp SC
   19          | • Call SC
   20          | • RETURN SC
   21          | • RETURN Exp SC
   22          | • IF LPAREN OpenScopeBlock ExpBool RPAREN Statement CloseScope
   23          | • IF LPAREN OpenScopeBlock ExpBool RPAREN Statement CloseScope ELSE OpenScopeBlock Statement CloseScope
   24          | • WHILE LPAREN OpenScopeCont ExpBool RPAREN Statement CloseScope
   25          | • BREAK SC
   26          | • CONTINUE SC
   27 Call: • ID LPAREN ExpList RPAREN
   28     | • ID LPAREN RPAREN
   31 Type: • INT
   32     | • BYTE
   33     | • BOOL

    ID        shift, and go to state 24
    INT       shift, and go to state 2
    BYTE      shift, and go to state 3
    BOOL      shift, and go to state 4
    RETURN    shift, and go to state 25
    WHILE     shift, and go to state 26
    BREAK     shift, and go to state 27
    CONTINUE  shift, and go to state 28
    IF        shift, and go to state 29
    LBRACE    shift, and go to state 30
    RBRACE    shift, and go to state 52

    Statement  go to state 53
    Call       go to state 33
    Type       go to state 34


State 32

   13 Statements: Statement •

    $default  reduce using rule 13 (Statements)


State 33

   19 Statement: Call • SC

    SC  shift, and go to state 54


State 34

   16 Statement: Type • ID SC
   17          | Type • ID ASSIGN Exp SC

    ID  shift, and go to state 55


State 35

   27 Call: • ID LPAREN ExpList RPAREN
   27     | ID LPAREN • ExpList RPAREN
   28     | • ID LPAREN RPAREN
   28     | ID LPAREN • RPAREN
   29 ExpList: • Exp
   30        | • Exp COMMA ExpList
   34 Exp: • LPAREN Exp RPAREN
   35    | • Exp IF LPAREN Exp RPAREN ELSE Exp
   36    | • Exp BINOP_ADD Exp
   37    | • Exp BINOP_MUL Exp
   38    | • ID
   39    | • Call
   40    | • NUM
   41    | • NUM B
   42    | • STRING
   43    | • TRUE
   44    | • FALSE
   45    | • NOT Exp
   46    | • Exp AND Exp
   47    | • Exp OR Exp
   48    | • Exp RELOP Exp
   49    | • Exp EQUALITY Exp
   50    | • LPAREN Type RPAREN Exp

    ID      shift, and go to state 37
    NUM     shift, and go to state 38
    STRING  shift, and go to state 39
    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    LPAREN  shift, and go to state 43
    RPAREN  shift, and go to state 56
    NOT     shift, and go to state 44

    Call     go to state 45
    ExpList  go to state 57
    Exp      go to state 58


State 36

   18 Statement: ID ASSIGN • Exp SC
   27 Call: • ID LPAREN ExpList RPAREN
   28     | • ID LPAREN RPAREN
   34 Exp: • LPAREN Exp RPAREN
   35    | • Exp IF LPAREN Exp RPAREN ELSE Exp
   36    | • Exp BINOP_ADD Exp
   37    | • Exp BINOP_MUL Exp
   38    | • ID
   39    | • Call
   40    | • NUM
   41    | • NUM B
   42    | • STRING
   43    | • TRUE
   44    | • FALSE
   45    | • NOT Exp
   46    | • Exp AND Exp
   47    | • Exp OR Exp
   48    | • Exp RELOP Exp
   49    | • Exp EQUALITY Exp
   50    | • LPAREN Type RPAREN Exp

    ID      shift, and go to state 37
    NUM     shift, and go to state 38
    STRING  shift, and go to state 39
    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    LPAREN  shift, and go to state 43
    NOT     shift, and go to state 44

    Call  go to state 45
    Exp   go to state 59


State 37

   27 Call: ID • LPAREN ExpList RPAREN
   28     | ID • LPAREN RPAREN
   38 Exp: ID •

    LPAREN  shift, and go to state 35

    $default  reduce using rule 38 (Exp)


State 38

   40 Exp: NUM •
   41    | NUM • B

    B  shift, and go to state 60

    $default  reduce using rule 40 (Exp)


State 39

   42 Exp: STRING •

    $default  reduce using rule 42 (Exp)


State 40

   43 Exp: TRUE •

    $default  reduce using rule 43 (Exp)


State 41

   44 Exp: FALSE •

    $default  reduce using rule 44 (Exp)


State 42

   20 Statement: RETURN SC •

    $default  reduce using rule 20 (Statement)


State 43

   27 Call: • ID LPAREN ExpList RPAREN
   28     | • ID LPAREN RPAREN
   31 Type: • INT
   32     | • BYTE
   33     | • BOOL
   34 Exp: • LPAREN Exp RPAREN
   34    | LPAREN • Exp RPAREN
   35    | • Exp IF LPAREN Exp RPAREN ELSE Exp
   36    | • Exp BINOP_ADD Exp
   37    | • Exp BINOP_MUL Exp
   38    | • ID
   39    | • Call
   40    | • NUM
   41    | • NUM B
   42    | • STRING
   43    | • TRUE
   44    | • FALSE
   45    | • NOT Exp
   46    | • Exp AND Exp
   47    | • Exp OR Exp
   48    | • Exp RELOP Exp
   49    | • Exp EQUALITY Exp
   50    | • LPAREN Type RPAREN Exp
   50    | LPAREN • Type RPAREN Exp

    ID      shift, and go to state 37
    NUM     shift, and go to state 38
    STRING  shift, and go to state 39
    INT     shift, and go to state 2
    BYTE    shift, and go to state 3
    BOOL    shift, and go to state 4
    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    LPAREN  shift, and go to state 43
    NOT     shift, and go to state 44

    Call  go to state 45
    Type  go to state 61
    Exp   go to state 62


State 44

   27 Call: • ID LPAREN ExpList RPAREN
   28     | • ID LPAREN RPAREN
   34 Exp: • LPAREN Exp RPAREN
   35    | • Exp IF LPAREN Exp RPAREN ELSE Exp
   36    | • Exp BINOP_ADD Exp
   37    | • Exp BINOP_MUL Exp
   38    | • ID
   39    | • Call
   40    | • NUM
   41    | • NUM B
   42    | • STRING
   43    | • TRUE
   44    | • FALSE
   45    | • NOT Exp
   45    | NOT • Exp
   46    | • Exp AND Exp
   47    | • Exp OR Exp
   48    | • Exp RELOP Exp
   49    | • Exp EQUALITY Exp
   50    | • LPAREN Type RPAREN Exp

    ID      shift, and go to state 37
    NUM     shift, and go to state 38
    STRING  shift, and go to state 39
    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    LPAREN  shift, and go to state 43
    NOT     shift, and go to state 44

    Call  go to state 45
    Exp   go to state 63


State 45

   39 Exp: Call •

    $default  reduce using rule 39 (Exp)


State 46

   21 Statement: RETURN Exp • SC
   35 Exp: Exp • IF LPAREN Exp RPAREN ELSE Exp
   36    | Exp • BINOP_ADD Exp
   37    | Exp • BINOP_MUL Exp
   46    | Exp • AND Exp
   47    | Exp • OR Exp
   48    | Exp • RELOP Exp
   49    | Exp • EQUALITY Exp

    SC         shift, and go to state 64
    IF         shift, and go to state 65
    OR         shift, and go to state 66
    AND        shift, and go to state 67
    EQUALITY   shift, and go to state 68
    RELOP      shift, and go to state 69
    BINOP_ADD  shift, and go to state 70
    BINOP_MUL  shift, and go to state 71


State 47

   24 Statement: WHILE LPAREN • OpenScopeCont ExpBool RPAREN Statement CloseScope
   53 OpenScopeCont: ε •

    $default  reduce using rule 53 (OpenScopeCont)

    OpenScopeCont  go to state 72


State 48

   25 Statement: BREAK SC •

    $default  reduce using rule 25 (Statement)


State 49

   26 Statement: CONTINUE SC •

    $default  reduce using rule 26 (Statement)


State 50

   22 Statement: IF LPAREN • OpenScopeBlock ExpBool RPAREN Statement CloseScope
   23          | IF LPAREN • OpenScopeBlock ExpBool RPAREN Statement CloseScope ELSE OpenScopeBlock Statement CloseScope
   52 OpenScopeBlock: ε •

    $default  reduce using rule 52 (OpenScopeBlock)

    OpenScopeBlock  go to state 73


State 51

   13 Statements: • Statement
   14           | • Statements Statement
   15 Statement: • LBRACE OpenScopeBlock Statements RBRACE CloseScope
   15          | LBRACE OpenScopeBlock • Statements RBRACE CloseScope
   16          | • Type ID SC
   17          | • Type ID ASSIGN Exp SC
   18          | • ID ASSIGN Exp SC
   19          | • Call SC
   20          | • RETURN SC
   21          | • RETURN Exp SC
   22          | • IF LPAREN OpenScopeBlock ExpBool RPAREN Statement CloseScope
   23          | • IF LPAREN OpenScopeBlock ExpBool RPAREN Statement CloseScope ELSE OpenScopeBlock Statement CloseScope
   24          | • WHILE LPAREN OpenScopeCont ExpBool RPAREN Statement CloseScope
   25          | • BREAK SC
   26          | • CONTINUE SC
   27 Call: • ID LPAREN ExpList RPAREN
   28     | • ID LPAREN RPAREN
   31 Type: • INT
   32     | • BYTE
   33     | • BOOL

    ID        shift, and go to state 24
    INT       shift, and go to state 2
    BYTE      shift, and go to state 3
    BOOL      shift, and go to state 4
    RETURN    shift, and go to state 25
    WHILE     shift, and go to state 26
    BREAK     shift, and go to state 27
    CONTINUE  shift, and go to state 28
    IF        shift, and go to state 29
    LBRACE    shift, and go to state 30

    Statements  go to state 74
    Statement   go to state 32
    Call        go to state 33
    Type        go to state 34


State 52

    5 FuncDecl: RetType ID LPAREN Formals RPAREN $@1 LBRACE Statements RBRACE •

    $default  reduce using rule 5 (FuncDecl)


State 53

   14 Statements: Statements Statement •

    $default  reduce using rule 14 (Statements)


State 54

   19 Statement: Call SC •

    $default  reduce using rule 19 (Statement)


State 55

   16 Statement: Type ID • SC
   17          | Type ID • ASSIGN Exp SC

    SC      shift, and go to state 75
    ASSIGN  shift, and go to state 76


State 56

   28 Call: ID LPAREN RPAREN •

    $default  reduce using rule 28 (Call)


State 57

   27 Call: ID LPAREN ExpList • RPAREN

    RPAREN  shift, and go to state 77


State 58

   29 ExpList: Exp •
   30        | Exp • COMMA ExpList
   35 Exp: Exp • IF LPAREN Exp RPAREN ELSE Exp
   36    | Exp • BINOP_ADD Exp
   37    | Exp • BINOP_MUL Exp
   46    | Exp • AND Exp
   47    | Exp • OR Exp
   48    | Exp • RELOP Exp
   49    | Exp • EQUALITY Exp

    COMMA      shift, and go to state 78
    IF         shift, and go to state 65
    OR         shift, and go to state 66
    AND        shift, and go to state 67
    EQUALITY   shift, and go to state 68
    RELOP      shift, and go to state 69
    BINOP_ADD  shift, and go to state 70
    BINOP_MUL  shift, and go to state 71

    $default  reduce using rule 29 (ExpList)


State 59

   18 Statement: ID ASSIGN Exp • SC
   35 Exp: Exp • IF LPAREN Exp RPAREN ELSE Exp
   36    | Exp • BINOP_ADD Exp
   37    | Exp • BINOP_MUL Exp
   46    | Exp • AND Exp
   47    | Exp • OR Exp
   48    | Exp • RELOP Exp
   49    | Exp • EQUALITY Exp

    SC         shift, and go to state 79
    IF         shift, and go to state 65
    OR         shift, and go to state 66
    AND        shift, and go to state 67
    EQUALITY   shift, and go to state 68
    RELOP      shift, and go to state 69
    BINOP_ADD  shift, and go to state 70
    BINOP_MUL  shift, and go to state 71


State 60

   41 Exp: NUM B •

    $default  reduce using rule 41 (Exp)


State 61

   50 Exp: LPAREN Type • RPAREN Exp

    RPAREN  shift, and go to state 80


State 62

   34 Exp: LPAREN Exp • RPAREN
   35    | Exp • IF LPAREN Exp RPAREN ELSE Exp
   36    | Exp • BINOP_ADD Exp
   37    | Exp • BINOP_MUL Exp
   46    | Exp • AND Exp
   47    | Exp • OR Exp
   48    | Exp • RELOP Exp
   49    | Exp • EQUALITY Exp

    RPAREN     shift, and go to state 81
    IF         shift, and go to state 65
    OR         shift, and go to state 66
    AND        shift, and go to state 67
    EQUALITY   shift, and go to state 68
    RELOP      shift, and go to state 69
    BINOP_ADD  shift, and go to state 70
    BINOP_MUL  shift, and go to state 71


State 63

   35 Exp: Exp • IF LPAREN Exp RPAREN ELSE Exp
   36    | Exp • BINOP_ADD Exp
   37    | Exp • BINOP_MUL Exp
   45    | NOT Exp •
   46    | Exp • AND Exp
   47    | Exp • OR Exp
   48    | Exp • RELOP Exp
   49    | Exp • EQUALITY Exp

    $default  reduce using rule 45 (Exp)


State 64

   21 Statement: RETURN Exp SC •

    $default  reduce using rule 21 (Statement)


State 65

   35 Exp: Exp IF • LPAREN Exp RPAREN ELSE Exp

    LPAREN  shift, and go to state 82


State 66

   27 Call: • ID LPAREN ExpList RPAREN
   28     | • ID LPAREN RPAREN
   34 Exp: • LPAREN Exp RPAREN
   35    | • Exp IF LPAREN Exp RPAREN ELSE Exp
   36    | • Exp BINOP_ADD Exp
   37    | • Exp BINOP_MUL Exp
   38    | • ID
   39    | • Call
   40    | • NUM
   41    | • NUM B
   42    | • STRING
   43    | • TRUE
   44    | • FALSE
   45    | • NOT Exp
   46    | • Exp AND Exp
   47    | • Exp OR Exp
   47    | Exp OR • Exp
   48    | • Exp RELOP Exp
   49    | • Exp EQUALITY Exp
   50    | • LPAREN Type RPAREN Exp

    ID      shift, and go to state 37
    NUM     shift, and go to state 38
    STRING  shift, and go to state 39
    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    LPAREN  shift, and go to state 43
    NOT     shift, and go to state 44

    Call  go to state 45
    Exp   go to state 83


State 67

   27 Call: • ID LPAREN ExpList RPAREN
   28     | • ID LPAREN RPAREN
   34 Exp: • LPAREN Exp RPAREN
   35    | • Exp IF LPAREN Exp RPAREN ELSE Exp
   36    | • Exp BINOP_ADD Exp
   37    | • Exp BINOP_MUL Exp
   38    | • ID
   39    | • Call
   40    | • NUM
   41    | • NUM B
   42    | • STRING
   43    | • TRUE
   44    | • FALSE
   45    | • NOT Exp
   46    | • Exp AND Exp
   46    | Exp AND • Exp
   47    | • Exp OR Exp
   48    | • Exp RELOP Exp
   49    | • Exp EQUALITY Exp
   50    | • LPAREN Type RPAREN Exp

    ID      shift, and go to state 37
    NUM     shift, and go to state 38
    STRING  shift, and go to state 39
    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    LPAREN  shift, and go to state 43
    NOT     shift, and go to state 44

    Call  go to state 45
    Exp   go to state 84


State 68

   27 Call: • ID LPAREN ExpList RPAREN
   28     | • ID LPAREN RPAREN
   34 Exp: • LPAREN Exp RPAREN
   35    | • Exp IF LPAREN Exp RPAREN ELSE Exp
   36    | • Exp BINOP_ADD Exp
   37    | • Exp BINOP_MUL Exp
   38    | • ID
   39    | • Call
   40    | • NUM
   41    | • NUM B
   42    | • STRING
   43    | • TRUE
   44    | • FALSE
   45    | • NOT Exp
   46    | • Exp AND Exp
   47    | • Exp OR Exp
   48    | • Exp RELOP Exp
   49    | • Exp EQUALITY Exp
   49    | Exp EQUALITY • Exp
   50    | • LPAREN Type RPAREN Exp

    ID      shift, and go to state 37
    NUM     shift, and go to state 38
    STRING  shift, and go to state 39
    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    LPAREN  shift, and go to state 43
    NOT     shift, and go to state 44

    Call  go to state 45
    Exp   go to state 85


State 69

   27 Call: • ID LPAREN ExpList RPAREN
   28     | • ID LPAREN RPAREN
   34 Exp: • LPAREN Exp RPAREN
   35    | • Exp IF LPAREN Exp RPAREN ELSE Exp
   36    | • Exp BINOP_ADD Exp
   37    | • Exp BINOP_MUL Exp
   38    | • ID
   39    | • Call
   40    | • NUM
   41    | • NUM B
   42    | • STRING
   43    | • TRUE
   44    | • FALSE
   45    | • NOT Exp
   46    | • Exp AND Exp
   47    | • Exp OR Exp
   48    | • Exp RELOP Exp
   48    | Exp RELOP • Exp
   49    | • Exp EQUALITY Exp
   50    | • LPAREN Type RPAREN Exp

    ID      shift, and go to state 37
    NUM     shift, and go to state 38
    STRING  shift, and go to state 39
    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    LPAREN  shift, and go to state 43
    NOT     shift, and go to state 44

    Call  go to state 45
    Exp   go to state 86


State 70

   27 Call: • ID LPAREN ExpList RPAREN
   28     | • ID LPAREN RPAREN
   34 Exp: • LPAREN Exp RPAREN
   35    | • Exp IF LPAREN Exp RPAREN ELSE Exp
   36    | • Exp BINOP_ADD Exp
   36    | Exp BINOP_ADD • Exp
   37    | • Exp BINOP_MUL Exp
   38    | • ID
   39    | • Call
   40    | • NUM
   41    | • NUM B
   42    | • STRING
   43    | • TRUE
   44    | • FALSE
   45    | • NOT Exp
   46    | • Exp AND Exp
   47    | • Exp OR Exp
   48    | • Exp RELOP Exp
   49    | • Exp EQUALITY Exp
   50    | • LPAREN Type RPAREN Exp

    ID      shift, and go to state 37
    NUM     shift, and go to state 38
    STRING  shift, and go to state 39
    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    LPAREN  shift, and go to state 43
    NOT     shift, and go to state 44

    Call  go to state 45
    Exp   go to state 87


State 71

   27 Call: • ID LPAREN ExpList RPAREN
   28     | • ID LPAREN RPAREN
   34 Exp: • LPAREN Exp RPAREN
   35    | • Exp IF LPAREN Exp RPAREN ELSE Exp
   36    | • Exp BINOP_ADD Exp
   37    | • Exp BINOP_MUL Exp
   37    | Exp BINOP_MUL • Exp
   38    | • ID
   39    | • Call
   40    | • NUM
   41    | • NUM B
   42    | • STRING
   43    | • TRUE
   44    | • FALSE
   45    | • NOT Exp
   46    | • Exp AND Exp
   47    | • Exp OR Exp
   48    | • Exp RELOP Exp
   49    | • Exp EQUALITY Exp
   50    | • LPAREN Type RPAREN Exp

    ID      shift, and go to state 37
    NUM     shift, and go to state 38
    STRING  shift, and go to state 39
    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    LPAREN  shift, and go to state 43
    NOT     shift, and go to state 44

    Call  go to state 45
    Exp   go to state 88


State 72

   24 Statement: WHILE LPAREN OpenScopeCont • ExpBool RPAREN Statement CloseScope
   27 Call: • ID LPAREN ExpList RPAREN
   28     | • ID LPAREN RPAREN
   34 Exp: • LPAREN Exp RPAREN
   35    | • Exp IF LPAREN Exp RPAREN ELSE Exp
   36    | • Exp BINOP_ADD Exp
   37    | • Exp BINOP_MUL Exp
   38    | • ID
   39    | • Call
   40    | • NUM
   41    | • NUM B
   42    | • STRING
   43    | • TRUE
   44    | • FALSE
   45    | • NOT Exp
   46    | • Exp AND Exp
   47    | • Exp OR Exp
   48    | • Exp RELOP Exp
   49    | • Exp EQUALITY Exp
   50    | • LPAREN Type RPAREN Exp
   51 ExpBool: • Exp

    ID      shift, and go to state 37
    NUM     shift, and go to state 38
    STRING  shift, and go to state 39
    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    LPAREN  shift, and go to state 43
    NOT     shift, and go to state 44

    Call     go to state 45
    Exp      go to state 89
    ExpBool  go to state 90


State 73

   22 Statement: IF LPAREN OpenScopeBlock • ExpBool RPAREN Statement CloseScope
   23          | IF LPAREN OpenScopeBlock • ExpBool RPAREN Statement CloseScope ELSE OpenScopeBlock Statement CloseScope
   27 Call: • ID LPAREN ExpList RPAREN
   28     | • ID LPAREN RPAREN
   34 Exp: • LPAREN Exp RPAREN
   35    | • Exp IF LPAREN Exp RPAREN ELSE Exp
   36    | • Exp BINOP_ADD Exp
   37    | • Exp BINOP_MUL Exp
   38    | • ID
   39    | • Call
   40    | • NUM
   41    | • NUM B
   42    | • STRING
   43    | • TRUE
   44    | • FALSE
   45    | • NOT Exp
   46    | • Exp AND Exp
   47    | • Exp OR Exp
   48    | • Exp RELOP Exp
   49    | • Exp EQUALITY Exp
   50    | • LPAREN Type RPAREN Exp
   51 ExpBool: • Exp

    ID      shift, and go to state 37
    NUM     shift, and go to state 38
    STRING  shift, and go to state 39
    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    LPAREN  shift, and go to state 43
    NOT     shift, and go to state 44

    Call     go to state 45
    Exp      go to state 89
    ExpBool  go to state 91


State 74

   14 Statements: Statements • Statement
   15 Statement: • LBRACE OpenScopeBlock Statements RBRACE CloseScope
   15          | LBRACE OpenScopeBlock Statements • RBRACE CloseScope
   16          | • Type ID SC
   17          | • Type ID ASSIGN Exp SC
   18          | • ID ASSIGN Exp SC
   19          | • Call SC
   20          | • RETURN SC
   21          | • RETURN Exp SC
   22          | • IF LPAREN OpenScopeBlock ExpBool RPAREN Statement CloseScope
   23          | • IF LPAREN OpenScopeBlock ExpBool RPAREN Statement CloseScope ELSE OpenScopeBlock Statement CloseScope
   24          | • WHILE LPAREN OpenScopeCont ExpBool RPAREN Statement CloseScope
   25          | • BREAK SC
   26          | • CONTINUE SC
   27 Call: • ID LPAREN ExpList RPAREN
   28     | • ID LPAREN RPAREN
   31 Type: • INT
   32     | • BYTE
   33     | • BOOL

    ID        shift, and go to state 24
    INT       shift, and go to state 2
    BYTE      shift, and go to state 3
    BOOL      shift, and go to state 4
    RETURN    shift, and go to state 25
    WHILE     shift, and go to state 26
    BREAK     shift, and go to state 27
    CONTINUE  shift, and go to state 28
    IF        shift, and go to state 29
    LBRACE    shift, and go to state 30
    RBRACE    shift, and go to state 92

    Statement  go to state 53
    Call       go to state 33
    Type       go to state 34


State 75

   16 Statement: Type ID SC •

    $default  reduce using rule 16 (Statement)


State 76

   17 Statement: Type ID ASSIGN • Exp SC
   27 Call: • ID LPAREN ExpList RPAREN
   28     | • ID LPAREN RPAREN
   34 Exp: • LPAREN Exp RPAREN
   35    | • Exp IF LPAREN Exp RPAREN ELSE Exp
   36    | • Exp BINOP_ADD Exp
   37    | • Exp BINOP_MUL Exp
   38    | • ID
   39    | • Call
   40    | • NUM
   41    | • NUM B
   42    | • STRING
   43    | • TRUE
   44    | • FALSE
   45    | • NOT Exp
   46    | • Exp AND Exp
   47    | • Exp OR Exp
   48    | • Exp RELOP Exp
   49    | • Exp EQUALITY Exp
   50    | • LPAREN Type RPAREN Exp

    ID      shift, and go to state 37
    NUM     shift, and go to state 38
    STRING  shift, and go to state 39
    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    LPAREN  shift, and go to state 43
    NOT     shift, and go to state 44

    Call  go to state 45
    Exp   go to state 93


State 77

   27 Call: ID LPAREN ExpList RPAREN •

    $default  reduce using rule 27 (Call)


State 78

   27 Call: • ID LPAREN ExpList RPAREN
   28     | • ID LPAREN RPAREN
   29 ExpList: • Exp
   30        | • Exp COMMA ExpList
   30        | Exp COMMA • ExpList
   34 Exp: • LPAREN Exp RPAREN
   35    | • Exp IF LPAREN Exp RPAREN ELSE Exp
   36    | • Exp BINOP_ADD Exp
   37    | • Exp BINOP_MUL Exp
   38    | • ID
   39    | • Call
   40    | • NUM
   41    | • NUM B
   42    | • STRING
   43    | • TRUE
   44    | • FALSE
   45    | • NOT Exp
   46    | • Exp AND Exp
   47    | • Exp OR Exp
   48    | • Exp RELOP Exp
   49    | • Exp EQUALITY Exp
   50    | • LPAREN Type RPAREN Exp

    ID      shift, and go to state 37
    NUM     shift, and go to state 38
    STRING  shift, and go to state 39
    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    LPAREN  shift, and go to state 43
    NOT     shift, and go to state 44

    Call     go to state 45
    ExpList  go to state 94
    Exp      go to state 58


State 79

   18 Statement: ID ASSIGN Exp SC •

    $default  reduce using rule 18 (Statement)


State 80

   27 Call: • ID LPAREN ExpList RPAREN
   28     | • ID LPAREN RPAREN
   34 Exp: • LPAREN Exp RPAREN
   35    | • Exp IF LPAREN Exp RPAREN ELSE Exp
   36    | • Exp BINOP_ADD Exp
   37    | • Exp BINOP_MUL Exp
   38    | • ID
   39    | • Call
   40    | • NUM
   41    | • NUM B
   42    | • STRING
   43    | • TRUE
   44    | • FALSE
   45    | • NOT Exp
   46    | • Exp AND Exp
   47    | • Exp OR Exp
   48    | • Exp RELOP Exp
   49    | • Exp EQUALITY Exp
   50    | • LPAREN Type RPAREN Exp
   50    | LPAREN Type RPAREN • Exp

    ID      shift, and go to state 37
    NUM     shift, and go to state 38
    STRING  shift, and go to state 39
    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    LPAREN  shift, and go to state 43
    NOT     shift, and go to state 44

    Call  go to state 45
    Exp   go to state 95


State 81

   34 Exp: LPAREN Exp RPAREN •

    $default  reduce using rule 34 (Exp)


State 82

   27 Call: • ID LPAREN ExpList RPAREN
   28     | • ID LPAREN RPAREN
   34 Exp: • LPAREN Exp RPAREN
   35    | • Exp IF LPAREN Exp RPAREN ELSE Exp
   35    | Exp IF LPAREN • Exp RPAREN ELSE Exp
   36    | • Exp BINOP_ADD Exp
   37    | • Exp BINOP_MUL Exp
   38    | • ID
   39    | • Call
   40    | • NUM
   41    | • NUM B
   42    | • STRING
   43    | • TRUE
   44    | • FALSE
   45    | • NOT Exp
   46    | • Exp AND Exp
   47    | • Exp OR Exp
   48    | • Exp RELOP Exp
   49    | • Exp EQUALITY Exp
   50    | • LPAREN Type RPAREN Exp

    ID      shift, and go to state 37
    NUM     shift, and go to state 38
    STRING  shift, and go to state 39
    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    LPAREN  shift, and go to state 43
    NOT     shift, and go to state 44

    Call  go to state 45
    Exp   go to state 96


State 83

   35 Exp: Exp • IF LPAREN Exp RPAREN ELSE Exp
   36    | Exp • BINOP_ADD Exp
   37    | Exp • BINOP_MUL Exp
   46    | Exp • AND Exp
   47    | Exp • OR Exp
   47    | Exp OR Exp •
   48    | Exp • RELOP Exp
   49    | Exp • EQUALITY Exp

    AND        shift, and go to state 67
    EQUALITY   shift, and go to state 68
    RELOP      shift, and go to state 69
    BINOP_ADD  shift, and go to state 70
    BINOP_MUL  shift, and go to state 71

    $default  reduce using rule 47 (Exp)


State 84

   35 Exp: Exp • IF LPAREN Exp RPAREN ELSE Exp
   36    | Exp • BINOP_ADD Exp
   37    | Exp • BINOP_MUL Exp
   46    | Exp • AND Exp
   46    | Exp AND Exp •
   47    | Exp • OR Exp
   48    | Exp • RELOP Exp
   49    | Exp • EQUALITY Exp

    EQUALITY   shift, and go to state 68
    RELOP      shift, and go to state 69
    BINOP_ADD  shift, and go to state 70
    BINOP_MUL  shift, and go to state 71

    $default  reduce using rule 46 (Exp)


State 85

   35 Exp: Exp • IF LPAREN Exp RPAREN ELSE Exp
   36    | Exp • BINOP_ADD Exp
   37    | Exp • BINOP_MUL Exp
   46    | Exp • AND Exp
   47    | Exp • OR Exp
   48    | Exp • RELOP Exp
   49    | Exp • EQUALITY Exp
   49    | Exp EQUALITY Exp •

    RELOP      shift, and go to state 69
    BINOP_ADD  shift, and go to state 70
    BINOP_MUL  shift, and go to state 71

    $default  reduce using rule 49 (Exp)


State 86

   35 Exp: Exp • IF LPAREN Exp RPAREN ELSE Exp
   36    | Exp • BINOP_ADD Exp
   37    | Exp • BINOP_MUL Exp
   46    | Exp • AND Exp
   47    | Exp • OR Exp
   48    | Exp • RELOP Exp
   48    | Exp RELOP Exp •
   49    | Exp • EQUALITY Exp

    BINOP_ADD  shift, and go to state 70
    BINOP_MUL  shift, and go to state 71

    $default  reduce using rule 48 (Exp)


State 87

   35 Exp: Exp • IF LPAREN Exp RPAREN ELSE Exp
   36    | Exp • BINOP_ADD Exp
   36    | Exp BINOP_ADD Exp •
   37    | Exp • BINOP_MUL Exp
   46    | Exp • AND Exp
   47    | Exp • OR Exp
   48    | Exp • RELOP Exp
   49    | Exp • EQUALITY Exp

    BINOP_MUL  shift, and go to state 71

    $default  reduce using rule 36 (Exp)


State 88

   35 Exp: Exp • IF LPAREN Exp RPAREN ELSE Exp
   36    | Exp • BINOP_ADD Exp
   37    | Exp • BINOP_MUL Exp
   37    | Exp BINOP_MUL Exp •
   46    | Exp • AND Exp
   47    | Exp • OR Exp
   48    | Exp • RELOP Exp
   49    | Exp • EQUALITY Exp

    $default  reduce using rule 37 (Exp)


State 89

   35 Exp: Exp • IF LPAREN Exp RPAREN ELSE Exp
   36    | Exp • BINOP_ADD Exp
   37    | Exp • BINOP_MUL Exp
   46    | Exp • AND Exp
   47    | Exp • OR Exp
   48    | Exp • RELOP Exp
   49    | Exp • EQUALITY Exp
   51 ExpBool: Exp •

    IF         shift, and go to state 65
    OR         shift, and go to state 66
    AND        shift, and go to state 67
    EQUALITY   shift, and go to state 68
    RELOP      shift, and go to state 69
    BINOP_ADD  shift, and go to state 70
    BINOP_MUL  shift, and go to state 71

    $default  reduce using rule 51 (ExpBool)


State 90

   24 Statement: WHILE LPAREN OpenScopeCont ExpBool • RPAREN Statement CloseScope

    RPAREN  shift, and go to state 97


State 91

   22 Statement: IF LPAREN OpenScopeBlock ExpBool • RPAREN Statement CloseScope
   23          | IF LPAREN OpenScopeBlock ExpBool • RPAREN Statement CloseScope ELSE OpenScopeBlock Statement CloseScope

    RPAREN  shift, and go to state 98


State 92

   15 Statement: LBRACE OpenScopeBlock Statements RBRACE • CloseScope
   54 CloseScope: ε •

    $default  reduce using rule 54 (CloseScope)

    CloseScope  go to state 99


State 93

   17 Statement: Type ID ASSIGN Exp • SC
   35 Exp: Exp • IF LPAREN Exp RPAREN ELSE Exp
   36    | Exp • BINOP_ADD Exp
   37    | Exp • BINOP_MUL Exp
   46    | Exp • AND Exp
   47    | Exp • OR Exp
   48    | Exp • RELOP Exp
   49    | Exp • EQUALITY Exp

    SC         shift, and go to state 100
    IF         shift, and go to state 65
    OR         shift, and go to state 66
    AND        shift, and go to state 67
    EQUALITY   shift, and go to state 68
    RELOP      shift, and go to state 69
    BINOP_ADD  shift, and go to state 70
    BINOP_MUL  shift, and go to state 71


State 94

   30 ExpList: Exp COMMA ExpList •

    $default  reduce using rule 30 (ExpList)


State 95

   35 Exp: Exp • IF LPAREN Exp RPAREN ELSE Exp
   36    | Exp • BINOP_ADD Exp
   37    | Exp • BINOP_MUL Exp
   46    | Exp • AND Exp
   47    | Exp • OR Exp
   48    | Exp • RELOP Exp
   49    | Exp • EQUALITY Exp
   50    | LPAREN Type RPAREN Exp •

    RELOP      shift, and go to state 69
    BINOP_ADD  shift, and go to state 70
    BINOP_MUL  shift, and go to state 71

    $default  reduce using rule 50 (Exp)


State 96

   35 Exp: Exp • IF LPAREN Exp RPAREN ELSE Exp
   35    | Exp IF LPAREN Exp • RPAREN ELSE Exp
   36    | Exp • BINOP_ADD Exp
   37    | Exp • BINOP_MUL Exp
   46    | Exp • AND Exp
   47    | Exp • OR Exp
   48    | Exp • RELOP Exp
   49    | Exp • EQUALITY Exp

    RPAREN     shift, and go to state 101
    IF         shift, and go to state 65
    OR         shift, and go to state 66
    AND        shift, and go to state 67
    EQUALITY   shift, and go to state 68
    RELOP      shift, and go to state 69
    BINOP_ADD  shift, and go to state 70
    BINOP_MUL  shift, and go to state 71


State 97

   15 Statement: • LBRACE OpenScopeBlock Statements RBRACE CloseScope
   16          | • Type ID SC
   17          | • Type ID ASSIGN Exp SC
   18          | • ID ASSIGN Exp SC
   19          | • Call SC
   20          | • RETURN SC
   21          | • RETURN Exp SC
   22          | • IF LPAREN OpenScopeBlock ExpBool RPAREN Statement CloseScope
   23          | • IF LPAREN OpenScopeBlock ExpBool RPAREN Statement CloseScope ELSE OpenScopeBlock Statement CloseScope
   24          | • WHILE LPAREN OpenScopeCont ExpBool RPAREN Statement CloseScope
   24          | WHILE LPAREN OpenScopeCont ExpBool RPAREN • Statement CloseScope
   25          | • BREAK SC
   26          | • CONTINUE SC
   27 Call: • ID LPAREN ExpList RPAREN
   28     | • ID LPAREN RPAREN
   31 Type: • INT
   32     | • BYTE
   33     | • BOOL

    ID        shift, and go to state 24
    INT       shift, and go to state 2
    BYTE      shift, and go to state 3
    BOOL      shift, and go to state 4
    RETURN    shift, and go to state 25
    WHILE     shift, and go to state 26
    BREAK     shift, and go to state 27
    CONTINUE  shift, and go to state 28
    IF        shift, and go to state 29
    LBRACE    shift, and go to state 30

    Statement  go to state 102
    Call       go to state 33
    Type       go to state 34


State 98

   15 Statement: • LBRACE OpenScopeBlock Statements RBRACE CloseScope
   16          | • Type ID SC
   17          | • Type ID ASSIGN Exp SC
   18          | • ID ASSIGN Exp SC
   19          | • Call SC
   20          | • RETURN SC
   21          | • RETURN Exp SC
   22          | • IF LPAREN OpenScopeBlock ExpBool RPAREN Statement CloseScope
   22          | IF LPAREN OpenScopeBlock ExpBool RPAREN • Statement CloseScope
   23          | • IF LPAREN OpenScopeBlock ExpBool RPAREN Statement CloseScope ELSE OpenScopeBlock Statement CloseScope
   23          | IF LPAREN OpenScopeBlock ExpBool RPAREN • Statement CloseScope ELSE OpenScopeBlock Statement CloseScope
   24          | • WHILE LPAREN OpenScopeCont ExpBool RPAREN Statement CloseScope
   25          | • BREAK SC
   26          | • CONTINUE SC
   27 Call: • ID LPAREN ExpList RPAREN
   28     | • ID LPAREN RPAREN
   31 Type: • INT
   32     | • BYTE
   33     | • BOOL

    ID        shift, and go to state 24
    INT       shift, and go to state 2
    BYTE      shift, and go to state 3
    BOOL      shift, and go to state 4
    RETURN    shift, and go to state 25
    WHILE     shift, and go to state 26
    BREAK     shift, and go to state 27
    CONTINUE  shift, and go to state 28
    IF        shift, and go to state 29
    LBRACE    shift, and go to state 30

    Statement  go to state 103
    Call       go to state 33
    Type       go to state 34


State 99

   15 Statement: LBRACE OpenScopeBlock Statements RBRACE CloseScope •

    $default  reduce using rule 15 (Statement)


State 100

   17 Statement: Type ID ASSIGN Exp SC •

    $default  reduce using rule 17 (Statement)


State 101

   35 Exp: Exp IF LPAREN Exp RPAREN • ELSE Exp

    ELSE  shift, and go to state 104


State 102

   24 Statement: WHILE LPAREN OpenScopeCont ExpBool RPAREN Statement • CloseScope
   54 CloseScope: ε •

    $default  reduce using rule 54 (CloseScope)

    CloseScope  go to state 105


State 103

   22 Statement: IF LPAREN OpenScopeBlock ExpBool RPAREN Statement • CloseScope
   23          | IF LPAREN OpenScopeBlock ExpBool RPAREN Statement • CloseScope ELSE OpenScopeBlock Statement CloseScope
   54 CloseScope: ε •

    $default  reduce using rule 54 (CloseScope)

    CloseScope  go to state 106


State 104

   27 Call: • ID LPAREN ExpList RPAREN
   28     | • ID LPAREN RPAREN
   34 Exp: • LPAREN Exp RPAREN
   35    | • Exp IF LPAREN Exp RPAREN ELSE Exp
   35    | Exp IF LPAREN Exp RPAREN ELSE • Exp
   36    | • Exp BINOP_ADD Exp
   37    | • Exp BINOP_MUL Exp
   38    | • ID
   39    | • Call
   40    | • NUM
   41    | • NUM B
   42    | • STRING
   43    | • TRUE
   44    | • FALSE
   45    | • NOT Exp
   46    | • Exp AND Exp
   47    | • Exp OR Exp
   48    | • Exp RELOP Exp
   49    | • Exp EQUALITY Exp
   50    | • LPAREN Type RPAREN Exp

    ID      shift, and go to state 37
    NUM     shift, and go to state 38
    STRING  shift, and go to state 39
    TRUE    shift, and go to state 40
    FALSE   shift, and go to state 41
    LPAREN  shift, and go to state 43
    NOT     shift, and go to state 44

    Call  go to state 45
    Exp   go to state 107


State 105

   24 Statement: WHILE LPAREN OpenScopeCont ExpBool RPAREN Statement CloseScope •

    $default  reduce using rule 24 (Statement)


State 106

   22 Statement: IF LPAREN OpenScopeBlock ExpBool RPAREN Statement CloseScope •
   23          | IF LPAREN OpenScopeBlock ExpBool RPAREN Statement CloseScope • ELSE OpenScopeBlock Statement CloseScope

    ELSE  shift, and go to state 108

    $default  reduce using rule 22 (Statement)


State 107

   35 Exp: Exp • IF LPAREN Exp RPAREN ELSE Exp
   35    | Exp IF LPAREN Exp RPAREN ELSE Exp •
   36    | Exp • BINOP_ADD Exp
   37    | Exp • BINOP_MUL Exp
   46    | Exp • AND Exp
   47    | Exp • OR Exp
   48    | Exp • RELOP Exp
   49    | Exp • EQUALITY Exp

    OR         shift, and go to state 66
    AND        shift, and go to state 67
    EQUALITY   shift, and go to state 68
    RELOP      shift, and go to state 69
    BINOP_ADD  shift, and go to state 70
    BINOP_MUL  shift, and go to state 71

    $default  reduce using rule 35 (Exp)


State 108

   23 Statement: IF LPAREN OpenScopeBlock ExpBool RPAREN Statement CloseScope ELSE • OpenScopeBlock Statement CloseScope
   52 OpenScopeBlock: ε •

    $default  reduce using rule 52 (OpenScopeBlock)

    OpenScopeBlock  go to state 109


State 109

   15 Statement: • LBRACE OpenScopeBlock Statements RBRACE CloseScope
   16          | • Type ID SC
   17          | • Type ID ASSIGN Exp SC
   18          | • ID ASSIGN Exp SC
   19          | • Call SC
   20          | • RETURN SC
   21          | • RETURN Exp SC
   22          | • IF LPAREN OpenScopeBlock ExpBool RPAREN Statement CloseScope
   23          | • IF LPAREN OpenScopeBlock ExpBool RPAREN Statement CloseScope ELSE OpenScopeBlock Statement CloseScope
   23          | IF LPAREN OpenScopeBlock ExpBool RPAREN Statement CloseScope ELSE OpenScopeBlock • Statement CloseScope
   24          | • WHILE LPAREN OpenScopeCont ExpBool RPAREN Statement CloseScope
   25          | • BREAK SC
   26          | • CONTINUE SC
   27 Call: • ID LPAREN ExpList RPAREN
   28     | • ID LPAREN RPAREN
   31 Type: • INT
   32     | • BYTE
   33     | • BOOL

    ID        shift, and go to state 24
    INT       shift, and go to state 2
    BYTE      shift, and go to state 3
    BOOL      shift, and go to state 4
    RETURN    shift, and go to state 25
    WHILE     shift, and go to state 26
    BREAK     shift, and go to state 27
    CONTINUE  shift, and go to state 28
    IF        shift, and go to state 29
    LBRACE    shift, and go to state 30

    Statement  go to state 110
    Call       go to state 33
    Type       go to state 34


State 110

   23 Statement: IF LPAREN OpenScopeBlock ExpBool RPAREN Statement CloseScope ELSE OpenScopeBlock Statement • CloseScope
   54 CloseScope: ε •

    $default  reduce using rule 54 (CloseScope)

    CloseScope  go to state 111


State 111

   23 Statement: IF LPAREN OpenScopeBlock ExpBool RPAREN Statement CloseScope ELSE OpenScopeBlock Statement CloseScope •

    $default  reduce using rule 23 (Statement)
